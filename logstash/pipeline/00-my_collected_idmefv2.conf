input {
  http {
    port => "${LISTEN_HTTP}"
  }
}

filter {

 if [http][method] != "POST" {
   drop{}
 }

  if ![ID] {
    uuid {
      target => "ID"
    }
  }

  if ![Version] {
    mutate {
      replace => {
        '[Version]' => '2.D.V05'
      }
    }
  }

  prune {
    whitelist_names => [
      # Top-level IDMEF attributes
      'Version',
      'ID',
      'OrganisationName',
      'OrganisationId',
      'EntityName',
      'EntityId',
      'Category',
      'ext-Category',
      'Cause',
      'Description',
      'Status',
      'Priority',
      'Confidence',
      'Note',
      'CreateTime',
      'StartTime',
      'EndTime',
      'AltNames',
      'AltCategory',
      'Ref',
      'CorrelID',
      'AggrCondition',
      'PredID',
      'RelID',

      # IDMEF classes
      'Analyzer',
      'Sensor',
      'Source',
      'Target',
      'Vector',
      'Attachment'
    ]
  }

}

output {
  kafka {
    bootstrap_servers => "${BOOTSTRAP_SERVER}"
    client_id         => "processing"
    topic_id          => "${TOPIC_PROCESSED}"
    codec             => json
  }
}
