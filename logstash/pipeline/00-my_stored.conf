input {
  kafka {
    bootstrap_servers => "${BOOTSTRAP_SERVER}"
    client_id         => "store"
    group_id          => "store"
    topics            => ["${TOPIC_PROCESSED}"]
    codec             => json
  }
}

filter {

  if ![ID] {
    uuid {
      target => "ID"
    }
  }

  if ![Version] {
    mutate {
      replace => {
        '[Version]' => '2.D.V05'
      }
    }
  }

  if ![Target][0][Location] {
    mutate {
      add_field => {
        '[Target][0][Location]' => 'Data Center'
      }
    }
  }

  prune {
    whitelist_names => [
      # Top-level IDMEF attributes
      'Version',
      'ID',
      'OrganisationName',
      'OrganisationId',
      'EntityName',
      'EntityId',
      'Category',
      'ext-Category',
      'Cause',
      'Description',
      'Status',
      'Priority',
      'Confidence',
      'Note',
      'CreateTime',
      'StartTime',
      'EndTime',
      'AltNames',
      'AltCategory',
      'Ref',
      'CorrelID',
      'AggrCondition',
      'PredID',
      'RelID',

      # IDMEF classes
      'Analyzer',
      'Sensor',
      'Source',
      'Target',
      'Vector',
      'Attachment'
    ]
  }

}

output {
  elasticsearch {
    hosts              => ["${BIG_DATA_SERVER}"]
    user               => "${BIG_DATA_USERNAME}"
    password           => "${BIG_DATA_PASSWORD}"
    template_api       => "legacy"
    ilm_enabled        => false
    #ilm_rollover_alias => "${INDEX_ALERTS}"
    template_overwrite => true
    template           => "/usr/share/logstash/config/IDMEFv2.mapping"
    manage_template    => true
    template_name      => "alert"
    #index              => "${INDEX_ALERTS}-%{+yyyy.MM.dd}"
    index              => "${INDEX_ALERTS}"
  }
}
